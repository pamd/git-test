# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
#HISTSIZE=1000
#HISTFILESIZE=2000
# dhu: Increase both sizes
HISTSIZE=10000
HISTFILESIZE=5000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# spwd is defined for bash prompt to show the trailing directories
spwd () {
    ( IFS=/
      set $PWD
      if test $# -le 4 ; then
	  echo "$PWD"
      else
	  eval echo \"\${$(($# - 2))}/\${$(($# - 1))}/\${$#}\"
      fi ) ;
}

# dhu: Prompt colors can be found at:
# https://wiki.archlinux.org/index.php/Color_Bash_Prompt
# Do NOT use colors of "[1;*".
if [ "$color_prompt" = yes ]; then
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    #PS1="${debian_chroot:+($debian_chroot)}\[\033[0;35m\][\u@jade: \$(spwd)]\[\033[00m\]\$ "
    # Highlight: 42m: green; 45m: purple ("\e" is equavalent to "\033").
    PS1="${debian_chroot:+($debian_chroot)}\[\e[45m\][\u@jade:\[\e[0;36m\] \$(spwd)]\[\e[0m\]\$ "
else
    PS1="${debian_chroot:+($debian_chroot)}\u@\h: \$(spwd)\$ "
fi
unset color_prompt force_color_prompt

# If this is an xterm, set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@jade: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto -CF'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
#alias l='ls -CF'
alias lscf='/bin/ls -CF' # dhu alias without distracting colors

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

######################################################################
# dhu customization
######################################################################
alias cls=clear
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias ajax='ssh 130.91.206.68'
alias fgtech='ssh adage@greenelab.fgtech.com'
alias greenelab='ssh adage@adage.greenelab.com'

# Setup X (spwd is defined in ~/.bashrc)
if [ -f ~/.Xresources ] && [ -n "$DISPLAY" ]; then
    xrdb -load ~/.Xresources
    #PS1="\[\033[01;34m\][\u: \$(spwd)]$\[\033[0m\] "
#elif [ -z "$DISPLAY" ]; then
#    PS1="\u@\h \w$ "
else
    #PS1="\[\033[0;35m\][\u@\h: \$(spwd)]$\[\033[0m\] "
    PS1="\[\033[42m\][\u@jade: \$(spwd)]$\[\033[0m\] "
fi

# My umask
umask 0022

# dos2unix
if [ -f /usr/bin/fromdos ]; then
    alias dos2unix=fromdos
fi

if [ -f /usr/bin/todos ]; then
    alias unix2dos=todos
fi

# Variables defined for mysql
export EDITOR=/usr/bin/emacs

# Compiler related configuration:
# CFLAGS controls C compiler (cc) option:
export CFLAGS='-g -Wall'

# CPPFLAGS sets the preprocessor options. It is NOT C++ flags.
# so this variable will be used by both C and C++ compilers.

# CXXFLAGS controls C++ compile options.
export CXXFLAGS='-g -Wall -std=c++0x'

# Python startup. dhu: DO NOT use ~ in the path.
export PYTHONSTARTUP='/home/dhu/.pythonrc'

# Run python statement(s) on shell command line:
# https://stackoverflow.com/questions/2043453/executing-python-multi-line-statements-in-the-one-line-command-line
#    $ python -c "print(123*456)"
# or:
#    $ echo "print 123*456" | python
#
# Alternatively, we can use "expr", "bc" (Basic Calculator) or "awk" command.
# Ref: https://www.shell-tips.com/2010/06/14/performing-math-calculation-in-bash/
# (1) "expr" can be used only for integers. This is a great limitation.
#       $ 1 + 2 | expr
# (2) "bc" is very powerful. By default it only keeps two digits after decimal point,
#      but "bc -l" enables maximum scaling:
#       $ echo "12.3*4.56 | bc -l
#     We can also set customized scale for "bc":
#       $ echo "scale=3; 12.3*4.56" | bc
# (3) "awk" example:
#       $ awk "BEGIN {print 100/3}"
#

# pep8 in PyPI has been renamed to pycodestyle since May 2016
alias pep8=pycodestyle

# Start 2nd dropbox account
# http://askubuntu.com/questions/475419/how-to-link-and-use-two-or-more-dropbox-accounts-simultaneously
# http://askubuntu.com/questions/296089/help-starting-up-multiple-dropbox-instances-on-ubuntu-startup
# Dropbox icons are located in:
#       $HOME/.dropbox-dist/dropbox-lnx.x86_64-3.0.3/images/hicolor/16x16/status/
#
# Either of the following two aliases will work, but sometimes the first one may ask the account name
# and password again.
#alias alt_dropbox="HOME=$HOME/private $HOME/.dropbox-dist/dropboxd"
alias start_dropbox2="HOME=$HOME/private /usr/bin/dropbox start"
alias stop_dropbox2="HOME=$HOME/private /usr/bin/dropbox stop"

# Launch ediff in emacs
# Ref #1: function definition
# https://defunitive.wordpress.com/2011/07/23/invoking-emacs-ediff-from-the-command-line/
# Ref #2: maximized window (do NOT use "-fs", which is "full screen".)
# http://www.emacswiki.org/emacs/EdiffMode
function ediff() {
    if [ "X${2}" = "X" ]; then
	echo "USAGE: ediff <FILE 1> <FILE 2>"
    else
	# The --eval flag takes lisp code and evaluates it with emacs
	emacs -mm --eval "(ediff-files \"$1\" \"$2\")"
    fi
}

# Log out Ubuntu desktop's gnome session with command line
# http://askubuntu.com/questions/15795/how-can-you-log-out-via-the-terminal
alias dhu_logout='gnome-session-quit --logout --no-prompt'

# Disable bash autocomletion of a certain command
# http://unix.stackexchange.com/questions/96534/disable-bash-autocompletion-for-a-specific-command-only
# Example: disable autocompletion of "make" command completely
#complete -W "" make
#
# Only allow "make" to auto-complete regular files in current directroy
# http://www.thegeekstuff.com/2013/12/bash-completion-complete/
#complete -f make
# or:
#complete -o default make
# Note: DO NOT use "-o bashdefault"
#
# Use system default, then add file names in current
# directory into the auto-completion list of "make".
# https://www.gnu.org/software/bash/manual/html_node/Programmable-Completion-Builtins.html
if [ -f /usr/share/bash-completion/completions/make ]; then
    source /usr/share/bash-completion/completions/make
    complete -F _make -f make
fi

# Backup tool: Back In Time
alias bit='backintime'
alias bit-qt4='backintime-qt4'

# Use Ctrl + Alt + Backspace to restart X.
# It will be even better if this command is set to automatic startup program, because
# then it will be effective right after login (instead of after a bash interactive shell).
# Putting this line in /etc/rc.local does NOT enable it system-wide, WHY?
setxkbmap -option terminate:ctrl_alt_bksp

# Add ~/.local/bin into PATH.
# This is the default path of executable files for dhu "pip install" command.
# For example, "yolk" is installed by: "pip install yolk"
# "yolk -V django" will show all available django package version in PyPI.
export PATH=~/.local/bin:$PATH

# Adage-server related aliases
alias source_adage='source ~/.virtualenvs/adage/bin/activate'
alias psql_adage='psql adage_test'

# Adage-server special conf: ml_model name in activity spreadsheet
# Command: ./manage.py import_activity <absolute_path_of_activity_file> "$ML_MODEL"
export ML_MODEL="Ensemble ADAGE 300"

# Required by virtualenvwrapper
# https://virtualenvwrapper.readthedocs.io/en/latest/install.html#shell-startup-file
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/py_project
source ~/.local/bin/virtualenvwrapper.sh

# Start ssh-agent
# https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/
# http://serverfault.com/questions/672346/straight-forward-way-to-run-ssh-agent-and-ssh-add-on-login-via-ssh
# Command: eval "$(ssh-agent -s)"

# codeclimate alias
alias cclimate=codeclimate

# Print the name(s) of files that has "foobar":
#   grep -l "foobar" *.txt
# Count the number of matches of "foobar" in all txt files:
#   grep -c "foobar" *.txt

# Synchronize my git fork to the master:
# $ git remote add upstream https://github.com/<master_repo>.git (only once)
# $ git remote -v # Confirm (optional)
#
# Rebase (use this procedure to update dhu's local and remote repos to greenelab master
# $ git fetch upstream
# $ git checkout master  # optional
# $ git merge upstream/master
# $ git push

# Clone a non-master branch on git:
# http://stackoverflow.com/questions/20033863/pull-specific-branch-from-git
# $ git clone https://github.com/mhuyck/adage-server.git -b <branch_name> --single-branch

# Add all tracked files in git:
# https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add
# (1) Stages all files (including untracked (new) files and deleted):
#       git add -A
# (2) Stages new files and modified ones, WITHOUT deleted files
#       git add .
# (3) stages modified and deleted, WITHOUT new files (used most often probably)
#       git add -u

# Django web server:
# https://docs.djangoproject.com/en/1.10/ref/django-admin/
# $ python manage.py runserver 8023 # Run on port 8023
# $ python manage.py runserver 10.0.1.3:8023 # Specify both IP address and port number

# eslint configuration.
# Make sure "sudo npm install -g eslint eslint-config-google".
alias eslint='eslint -c /home/dhu/adage-server/interface/eslint.conf.js'

# Merge pdf files:
# http://stackoverflow.com/questions/2507766/merge-convert-multiple-pdf-files-into-one-pdf
# (1) "gs" command with generic options:
#   $ gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf input1.pdf input2.pdf
#
# (2) "gs" with "-dPDFSETTINGS=/prepress" for higher resolution (recommended)
#   $ gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile=merged.pdf input1.pdf input2.pdf
#
# (3) "pdftk" (pdf toolkit) command (recommended, but need to install pdftk package):
#   $ pdftk input1.pdf input2.pdf cat output merged.pdf
#
# (4) "pdfunite" command (output file may be too large, may break hyperlinks, merged PDF file
#     may crash when more annotations were added to it by Adobe Reader App in iPad):
#   $ pdfunite input1.pdf input2.pdf merged.pdf
#
# (5) "pdfjoin" command (may break hyperlinks, may fail when input file has too many pages):
#   $ pdfjoin input1.pdf input2.pdf       # output file: input2-joined.pdf
#
# (6) "convert" command (NOT recommended: output resolution is bad):
#   $ convert input1.pdf inpu2.pdf merged.pdf
#
# pip: only upgrade a certain package, WITHOUT upgrading the dependencies:
#   $ pip install -U --no-deps django-genes

# Alias to start the simple python http server:
alias py_http_server='python -m SimpleHTTPServer'

# Run a certain unit test case in tests.py:
# $ ./manage.py test analyaze.tests.APIResourceTestCase.test_sample_get

# Location of MOTD (message of the day) on Ubuntu 16.04:
# /run/motd.dynamic
alias motd='cat /run/motd.dynamic'

# Image Viewer in Gnome: eog (Eye of Gnome)

# pandoc: Convert txt into epub (installed by "apt-get install pandoc"
# http://ebooks.stackexchange.com/questions/1249/converting-raw-text-to-epub
# Command: pandoc input.txt -o output.epub

# tsc command options:
#   tsc --help                  # help screen
#   tsc --target "ES5" input.ts # possible targets: ES3 (default), ES5, ES2015, ES2016, ES2017, or ESNEXT
#   tsc --init                  # create tsconfig.json in current directory
alias tsc='tsc --target es5'

# Path of "Trash" folder on the desktop: ~/.local/share/Trash/files
# These two sub-directories:
#    ~/.local/share/Trash/expunged/: not useful.
#    ~/.local/share/Trash/info/: bookkeeping info for file restore.

# Create a bootable USB stick on Ubuntu:
# (1) GUI:
#     https://www.ubuntu.com/download/desktop/create-a-usb-stick-on-ubuntu
# (2) Command line (dd):
#     https://askubuntu.com/questions/372607/how-to-create-a-bootable-ubuntu-usb-flash-drive-from-terminal

# cfncluster on AWS (regular user, no admin priviledge)
alias cfncluster='ssh -i ~/.ssh/cfncluster.pem dongbo@34.233.249.241'

# "sort -k3 -g filename":
# sort a file by its 3rd field in general numerical format (including floating point).
# With "-n" option, "9.2e-5" will be LARGER than "0.12", which is wrong!
